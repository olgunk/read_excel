/*
 * 
 */
package pdf;

import reader.ReadExcel;

import java.io.Console;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.util.List;

import jxl.Sheet;
import java.text.SimpleDateFormat;
import java.util.Calendar;

import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Image;


// TODO: Auto-generated Javadoc
/**
 * The Class createpdf.
 */
public class createpdf {
	
	/** The file. */
	private static String FILE = "storeMate_Rossmann_GS1-MHD-Verfall_Codes.pdf";
	
	/** The cano font. */
	private static Font canoFont = new Font(Font.FontFamily.COURIER, 18,
	        Font.BOLD);
	
	/** The normal. */
	private static Font normal = new Font(Font.FontFamily.COURIER, 16,
	        Font.BOLD);
	
	/** The excelfile. */
	private static String excelfile = "BarcodeLi.xls";
	
	/** The kopfheader. */
	private static String kopfheader = "Kopf.png";

	/**
	 * The main method.
	 *
	 * @param args the arguments
	 */
	public void main(String[] args) {
		try {
			ReadExcel excelTabelle = new ReadExcel();
			excelTabelle.setInputFile(excelfile);
			excelTabelle.read();
			Document document = new Document();
			PdfWriter.getInstance(document, new FileOutputStream(FILE));
			System.out.println(FILE);
			
			document.open();
			titel_seite(document);
			addTitlePage(document);
			addContent(document);
			document.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * Titel_seite.
	 *
	 * @param document the document
	 * @throws DocumentException the document exception
	 * @throws MalformedURLException the malformed url exception
	 * @throws IOException Signals that an I/O exception has occurred.
	 */
	private static void titel_seite(Document document) throws DocumentException, MalformedURLException, IOException {
	
		Image image1 = Image.getInstance("kopf.png");
		 image1.scalePercent(50f);
		document.add(image1);
		
		Paragraph paragraph2 = new Paragraph(10);
		paragraph2.setSpacingAfter(50);
		paragraph2.setSpacingBefore(50);
		paragraph2.setAlignment(Element.ALIGN_CENTER);
		
		Paragraph paragraph3 = new Paragraph(100);
		paragraph3.setSpacingAfter(50);
		paragraph3.setSpacingBefore(50);
		paragraph3.setAlignment(Element.ALIGN_CENTER);
		
		Chunk chunk1 = new Chunk("Artikelcodes mit MHD und Verfallsdatum",canoFont);
		Chunk chunk2 = new Chunk("\n_____________________________________",canoFont);
		document.add( Chunk.NEWLINE );
		document.add( Chunk.NEWLINE );
		
		Calendar cal = Calendar.getInstance();
	    SimpleDateFormat formater = new SimpleDateFormat();
		Chunk chunk3 = new Chunk("Dokument wurde von " + System.getProperty("user.name") + " am " + formater.format(cal.getTime()) + " erstellt.", //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
		        normal);
		
	
		paragraph2.add(chunk1);
		paragraph2.add(chunk2);
		
		paragraph3.add(chunk3);
		
        document.add(paragraph2);
        document.add(paragraph3);
	}
	
	
	/**
	 * Adds the title page.
	 *
	 * @param document the document
	 * @throws DocumentException the document exception
	 */
	private static void addTitlePage(Document document)
	        throws DocumentException {
		Paragraph preface = new Paragraph();
		// We add one empty line
		addEmptyLine(preface, 1);
		
		
		
		addEmptyLine(preface, 1);
		// Will create: Report generated by: _name, _date
	
		
		// addEmptyLine(preface, 8);
		
		document.add(preface);
		// Start a new page
		document.newPage();
		
	}
	
	/**
	 * Adds the content.
	 *
	 * @param document the document
	 * @throws DocumentException the document exception
	 * @throws IOException Signals that an I/O exception has occurred.
	 */
	private static void addContent(Document document) throws DocumentException,
	        IOException {
		/*      Variablen   deklaration */
		List<String> productHeader = getProductHeader();
		List<String> barcodeliste = getProductList();
		int count = getImageCount();
		int totalPage = getTotalPageNumber()-1; //getTotalPageNumber becerermedik deswegen -1
		int pageCount = 0;
		int neueseite = 1;
		Paragraph seite = new Paragraph();
		seite.setAlignment(Element.ALIGN_RIGHT);
		
		/*      Image   deklaration */
		Image header_image = Image.getInstance(kopfheader);
		header_image.setAlignment(Image.MIDDLE);
		header_image.scalePercent(50);
		document.add(header_image);
		
		for (int i = 2; i <= count+1; i++) {
			if (i == 2) {				
				document.add(new Paragraph("Artikel nur mit Mindesthaltbarkeitsdatum (MHD)", canoFont));
				document.add(Chunk.NEWLINE);
			}
			else if (i == 7) {				
				document.add(new Paragraph("Artikel nur mit Verfallsdatum(VFD)", canoFont));
				document.add(Chunk.NEWLINE);
			}
			else if (i == 12) {				
				document.add(new Paragraph("Artikel mit MHD und Verfallsdatum", canoFont));
				document.add(Chunk.NEWLINE);
			}
			else if (i == 20) {		
				//document.newPage();
				document.add(new Paragraph("Artikel mit MHD und Verfallsdatum: Sonderfall01", canoFont));
				document.add(Chunk.NEWLINE);
			}
			
			document.add(new Paragraph(productHeader.get(i)));
			Image barcode = Image.getInstance("Barcodes\\Barcodes" + i + ".png");
			barcode.setAlignment(Image.LEFT);
			barcode.scalePercent(40);
			document.add(new Paragraph(barcodeliste.get(i-2).replace(";", "")));
			document.add(barcode);
			document.add(Chunk.NEWLINE);

			if (i != count) {
				if ((neueseite % 5) == 0) {
			
					
					pageCount += 1;

					
					Chunk chunk = new Chunk("Page " + pageCount + " / " + totalPage);
					seite.add(chunk);
					document.add(seite);
					seite.removeAll(seite);
					if (pageCount != totalPage) {
						document.newPage();
						document.add(header_image);						
					}
					
				}
			}
			neueseite += 1;
			
		}
	}
	
	/**
	 * Adds the empty line.
	 *
	 * @param paragraph the paragraph
	 * @param number the number
	 */
	private static void addEmptyLine(Paragraph paragraph, int number) {
		for (int i = 0; i < number; i++) {
			paragraph.add(new Paragraph(""));
		}
	}
	
	/**
	 * Gets the total page number.
	 *
	 * @return the total page number
	 * @throws IOException Signals that an I/O exception has occurred.
	 */
	public static int getTotalPageNumber() throws IOException {
		/*      Variablen   deklaration */
		int neueseite = 1;
		int count = getImageCount();
		int pageCount = 1;
		
		
		for (int i = 2; i <= count + 1; i++) {
			if (i != count - 1) {
				if (neueseite % 5 == 0) {
					pageCount += 1;
				}
			}
			neueseite += 1;
		}
		return pageCount;
	}
	
	/**
	 * Gets the image count.
	 *
	 * @return the image count
	 * @throws IOException Signals that an I/O exception has occurred.
	 */
	public static int getImageCount() throws IOException {
		/*      Variablen   deklaration */
		ReadExcel excelTabelle = new ReadExcel();
		excelTabelle.setInputFile(excelfile);
		Sheet sheet = excelTabelle.excselinhalt();
		int count = excelTabelle.getExcelTabelleCount(sheet);
		return count;
	}
	
	/**
	 * Gets the product header.
	 *
	 * @return the product header
	 * @throws IOException Signals that an I/O exception has occurred.
	 */
	public static List<String> getProductHeader() throws IOException {
		ReadExcel excelTabelle = new ReadExcel();
		excelTabelle.setInputFile(excelfile);
		Sheet sheet = excelTabelle.excselinhalt();
		List<String> headerliste = excelTabelle.getProductHeader(sheet);
		return headerliste;
	}
	
	/**
	 * Gets the product list.
	 *
	 * @return the product list
	 * @throws IOException Signals that an I/O exception has occurred.
	 */
	public static List<String> getProductList() throws IOException {
		ReadExcel exceltabelle = new ReadExcel();
		exceltabelle.setInputFile(excelfile);
		Sheet sheet = exceltabelle.excselinhalt();
		List<String> barcodelist = exceltabelle.getExcselTabelleList(sheet);
		return barcodelist;
	}
	
}
