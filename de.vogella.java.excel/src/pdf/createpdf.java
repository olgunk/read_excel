package pdf;

import reader.ReadExcel;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.util.Date;
import java.util.List;
import jxl.Cell;
import jxl.CellType;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;
import org.w3c.dom.Text;

import reader.ReadExcel;

import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Header;

import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Image;

public class createpdf {
	private static String FILE = "c:/temp/storeMate_Rossmann_GS1-MHD-Verfall_Codes.pdf";
	private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
	        Font.BOLD);
	private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
	        Font.BOLD);
	
	public static void main(String[] args) {
		
		try {
			ReadExcel excelTabelle = new ReadExcel();
			excelTabelle
			        .setInputFile("C:\\Dokumente und Einstellungen\\okutrag\\Desktop\\Barcode\\BarcodeLi.xls");
			excelTabelle.read();
			Document document = new Document();
			PdfWriter.getInstance(document, new FileOutputStream(FILE));
			document.open();
			addMetaData(document);
			addTitlePage(document);
			addContent(document);
			document.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	private static void addMetaData(Document document) throws DocumentException {
		
		document.addTitle("Artikelcodes mit MHD und Verfallsdatum");
		document.addAuthor("Olgun Katrag");
		document.addCreator("Olgun Katrag");
		
		document.add(new Paragraph("Hello World", smallBold));
	}
	
	private static void addTitlePage(Document document)
	        throws DocumentException {
		Paragraph preface = new Paragraph();
		// We add one empty line
		addEmptyLine(preface, 1);
		// Lets write a big header
		preface.add(new Paragraph("Artikelcodes mit MHD und Verfallsdatum",
		        catFont));
		
		addEmptyLine(preface, 1);
		// Will create: Report generated by: _name, _date
		preface.add(new Paragraph(
		        "Report generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
		        smallBold));
		
		// addEmptyLine(preface, 8);
		
		document.add(preface);
		// Start a new page
		document.newPage();
		
	}
	
	private static void addContent(Document document) throws DocumentException,
	        IOException {
		/*      Variablen   deklaration */
		String productHeader = getProductHeader();
		String[] productHeader_geteilt = productHeader.split(";");
		int pageCount = 0;
		int count = getImageCount();
		int totalPage = getTotalPageNumber();
		int neueseite = 1;
		Paragraph seite = new Paragraph();
		seite.setAlignment(Element.ALIGN_RIGHT);
		
		/*      Image   deklaration */
		Image header_image = Image.getInstance("C:\\Dokumente und Einstellungen\\okutrag\\Desktop\\Barcode\\MIT ZINT\\Kopf.png");
		header_image.setAlignment(Image.MIDDLE);
		header_image.scalePercent(50);
		document.add(header_image);
		
		document.add(new Paragraph("Artikel nur mit Mindesthaltbarkeitsdatum (MHD)", catFont));
		document.add(Chunk.NEWLINE);
		
		
		
		for (int i = 2; i <= count + 1; i++) {
			document.add(new Paragraph(productHeader_geteilt[i]));
			Image barcode = Image.getInstance("c:\\Barcodes\\Barcodes" + i
			        + ".png");
			barcode.setAlignment(Image.LEFT);
			barcode.scalePercent(25);
			document.add(barcode);
			document.add(Chunk.NEWLINE);
			document.add(Chunk.NEWLINE);
			document.add(Chunk.NEWLINE);
			
			if (i != count + 1) {
				if (neueseite % 5 == 0) {
					pageCount += 1;
					Chunk chunk = new Chunk("Page " + pageCount + " / " + totalPage);
					seite.add(chunk);
					document.add(Chunk.NEWLINE);
					document.add(Chunk.NEWLINE);
					document.add(seite);
					seite.removeAll(seite);
					document.newPage();
					document.add(header_image);
					
				}
			}
			neueseite += 1;
			
		}
	}
	
	private static void addEmptyLine(Paragraph paragraph, int number) {
		for (int i = 0; i < number; i++) {
			paragraph.add(new Paragraph(""));
		}
	}
	
	public static int getTotalPageNumber() throws IOException {
		/*      Variablen   deklaration */
		int neueseite = 1;
		int count = getImageCount();
		int pageCount = 1;
		
		
		for (int i = 2; i <= count + 1; i++) {
			if (i != count - 1) {
				if (neueseite % 5 == 0) {
					pageCount += 1;
				}
			}
			neueseite += 1;
		}
		return pageCount;
	}
	
	public static int getImageCount() throws IOException {
		/*      Variablen   deklaration */
		String barcode = "";
		int count = 0;
		Cell temp;
		ReadExcel excelTabelle = new ReadExcel();
		excelTabelle.setInputFile("C:\\Dokumente und Einstellungen\\okutrag\\Desktop\\Barcode\\BarcodeLi.xls");
		Sheet sheet = excelTabelle.excselinhalt();
		
		for (int y = 2; y < 22; y++) {
			System.out.println("");
			for (int x = 1; x < 3; x++) {
				temp = sheet.getCell(x, y);
				barcode = barcode + temp.getContents();
			}
			count += 1;
		}
		return count;
	}
	
	public static String getProductHeader() throws IOException {
		String barcode = "";
		Cell temp;
		ReadExcel excelTabelle = new ReadExcel();
		excelTabelle.setInputFile("C:\\Dokumente und Einstellungen\\okutrag\\Desktop\\Barcode\\BarcodeLi.xls");
		Sheet sheet = excelTabelle.excselinhalt();
		
		for (int y = 0; y < 22; y++) {
			System.out.println("");
			for (int x = 0; x < 1; x++) {
				temp = sheet.getCell(x, y);
				barcode = barcode + temp.getContents() + ";";
			}
		}
		return barcode;
	}
	
}
